<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find bot_description)/urdf/piyabot_delta.urdf.xacro" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find piyabot_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model piyabot -param robot_description -x -2.0 -y -1.0 -z 0.5"/>

  <!-- ros_control mybot launch file -->
  <include file="$(find bot_control)/launch/bot_control.launch" /> 

  <!-- Run RVIZ -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" args="$(find piyabot_gazebo)/gazebo_model.rviz" output="screen"/>



</launch>
